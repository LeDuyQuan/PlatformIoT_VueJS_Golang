[app]
; define the minimum safe distance (in meter) that two people can be
; from each other
min_distance = 1
; interval time to send out result
dwell_time   = 3

; camera info
[camera]
id        = 5f56e7048457d
direction = OUT
; 0 for webcam
url       = rtsp://137.116.141.158/TransportCo/BO29

[detection]
; boolean indicating if NVIDIA CUDA GPU should be used
use_gpu         = true
; network(darknet, darknet4, mobilenet, tensorflow)
network         = mobilenet
; initialize minimum probability to filter weak detections along with
; the threshold when applying non-maxima suppression
min_conf        = 0.5
nms_thresh      = 0.5
; this value determine the output frame width will be less than or equal
frame_max_width = 500
; latest_frame indicates whether program handles source (file or rtsp..)
; as stream or not; if "true" the source reading always return the latest frame;
; otherwise, the source return as per FIFO rule
latest_frame    = true

; define the time a person has spent in a frame(in seconds)
[tracking]
; apply tracking as an option?
is_tracking     = True
max_disappeared = 20
max_distance    = 120
; skip_frames indicates the detection is done every no. of frames interval;
; otherwise, frames are in tracking
skip_frames     = 20

[output]
; display max width
display_width  = 860
; display with ROI or not
is_display_roi = False
; full output path with file extension format mp4
path           = 

[broker]
; nats | kafka
name       = nats
address    = localhost:4222
topic      = brazn.topic.sdm
; this value determine msg header: alias domain resource
; please keep enough three values
msg_header = sdm buildos_staging violation

[log]
; levels (critical, error, warn, info, debug), need to restart program to take effect
log_level = info

